load sympaths.maude
load dynamic.maude

mod TEST is
    including SEMANTICS .
    including DYNAMIC-PROVER .

    vars Sigma Sigma' : Substitution .
    vars V : Var .
    vars E : Expr .
    vars Ev1 Ev2 : Event .
    vars Se : SymExpr .
    vars P P' : Pool .
    vars NP NP' : NePool .
    vars Ss Ss' Ss'' : Statements .
    vars T T' : Thread .
    vars I I' : ThreadId .
    vars Sp Sp' : SymPath .

    op sigma : -> Substitution .
    eq sigma = 'x |-> (x(0) + int(3)), 'y |-> (x(0) + x(1) + int(4)), 'b |-> bool true .
endm

rew (| < I | 'x := 'y >, sigma, epsilon, empty |) .
rew (| < I | skip >, Sigma, epsilon, < I' | skip > |) .
rew (| idle, Sigma, epsilon, (< 0 | skip >, < 1 | skip >, < 2 | skip >) |) .
rew (| < I | if ('x =:= 1) { 'x := 2 } else { 'x := 'y } >, sigma, epsilon, empty |) .

rew
(| idle
,  ('x |-> x(0), 'y |-> x(1), 'z |-> x(2))
,  epsilon
,  (< 0 | 'y := 'x >,
    < 1 | 'z := 'x >,
    < 2 | 'x := 2 > )
|) .

rew
(| idle
,  ('x |-> x(0), 'y |-> x(1), 'z |-> x(2))
,  epsilon
,  (< 0 | while ('y =:= 'x)[2] { 'y := 'y + 1 } >,
    < 1 | 'z := 'x >,
    < 2 | 'x := 2 > )
|) .

--- DL

rew
Gamma, epsilon ==>
('x |-> x(0), 'y |-> x(1), 'z |-> x(2))
[ idle, (< 0 | 'y := 'x >, < 1 | 'z := 'x >, < 2 | 'x := 2 > ) ]
Psy
.